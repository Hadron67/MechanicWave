! this file is part of mechanic_wave.c
! CFY's Physics Project
	SUBROUTINE FORTRANFUNC_MECHANIC_WAVE_REACT(WAVE,WAVEV
     &,HEIGHT,WIDTH,DX,DT,BOUND,V)
		INTEGER :: HEIGHT,WIDTH,BOUND
		REAL :: DX,DT
		REAL,DIMENSION(1:HEIGHT*WIDTH) :: WAVE,WAVEV,V,A
		A=0
		DO I=2,HEIGHT-1 !spring model,
			DO J=2,WIDTH-1
				INDEX=(I-1)*WIDTH+J
				A(INDEX)=WAVE(INDEX+1)+WAVE(INDEX-1)+WAVE(INDEX+WIDTH)+
     &			WAVE(INDEX-WIDTH)+WAVE(INDEX+WIDTH+1)+WAVE(INDEX+WIDTH-1)+
     &			WAVE(INDEX-WIDTH+1)+WAVE(INDEX-WIDTH-1)-8*WAVE(INDEX)
     				A(INDEX)=V(INDEX)*V(INDEX)*A(INDEX)/DX/DX
			ENDDO
		ENDDO
		!deal with boundary conditions
		IF(BOUND.EQ.1) THEN
			DO I=1,WIDTH
				INDEX=I+WIDTH*(HEIGHT-1)
				WAVEV(INDEX)=V(INDEX)*(WAVE(INDEX-WIDTH)-WAVE(INDEX))/DX
				WAVEV(I)=V(INDEX)*(WAVE(I+WIDTH)-WAVE(I))/DX
			ENDDO
			DO I=2,HEIGHT-1
				INDEX=(I-1)*WIDTH+1
				WAVEV(INDEX)=V(INDEX)*(WAVE(INDEX+1)-WAVE(INDEX))/DX
				WAVEV(INDEX+WIDTH-1)=V(INDEX)*(WAVE(INDEX+WIDTH-2)-
     &			WAVE(INDEX+WIDTH-1))/DX
			ENDDO
		END IF
		WAVEV=WAVEV+A*DT
		WAVE=WAVE+WAVEV*DT+0.5*A*DT*DT
	END
c.....................................................................
	SUBROUTINE FORTRANFUNC_MECHANIC_WAVE_INIT(WAVE,WAVEV
     &,HEIGHT,WIDTH,V,VX)
		INTEGER :: HEIGHT,WIDTH
		REAL :: VX
		REAL,DIMENSION(HEIGHT*WIDTH) :: WAVE,WAVEV,V
		WAVE=0
		WAVEV=0
		V=VX
	END
c.....................................................................
	FUNCTION FORTRANFUNC_MECHANIC_WAVE_GETMAX(WAVE,LENTH)
		INTEGER :: LENTH
		REAL,DIMENSION(LENTH) :: WAVE
		FORTRANFUNC_MECHANIC_WAVE_GETMAX=MAXVAL(WAVE)
	END
